{"version":3,"sources":["styles/GlobalStyle.js","myBase.js","components/ImgTweet.js","components/ImgTweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/MyTweets.js","routes/Profile.js","components/NavBar.js","components/Router.js","components/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","reset","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","Nweet","styled","div","ImgTweet","userObj","isOwner","useState","editing","setEditing","text","newTweet","setNewTweet","console","log","onDeleteClick","a","window","confirm","deleteDoc","doc","id","deleteObject","ref","fileURL","onSubmit","event","preventDefault","updateDoc","toggleEditing","prev","className","type","placeholder","value","required","autoFocus","onChange","target","onClick","profilePhoto","src","alt","nickName","icon","faUserCircle","size","style","fontSize","fontWeight","color","email","paddingTop","faTrash","faPencilAlt","FactoryForm","form","InputContainer","FactoryInput","input","FactoryArrow","ImgTweetFactory","tweet","setTweet","attachment","setAttachment","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","tweetPost","createdAt","Date","now","creatorId","displayName","photoURL","addDoc","collection","maxLength","htmlFor","cursor","marginRight","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","q","query","orderBy","onSnapshot","snapshot","tweetArr","docs","map","data","AuthForm","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","AuthContainer","AuthBtns","AuthBtn","button","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","faTwitter","marginBottom","faGoogle","MyTweets","myTweets","setMyTweets","getMyTweets","useCallback","where","getDocs","querySnapshot","myTweet","index","ProfileForm","ProfileImg","Profile","refreshUser","newDisplayName","setNewDisplayName","navigate","useNavigate","user","currentUser","updateProfile","marginTop","signOut","NavBar","display","justifyContent","alignItems","width","to","marginLeft","flexDirection","faUser","StyledDiv","AppRouter","isLoggedIn","exact","path","element","App","init","setInit","setUserObj","onAuthStateChanged","split","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6d38946.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\nimport reset from 'styled-reset'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n${reset}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\ninput {\r\n  all: unset;\r\n  box-sizing: border-box;\r\n  appearance: none;\r\n}\r\n\r\nbody {\r\n   background-color: black; \r\n  \r\n  font-size: 14px;\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n   color: white; \r\n}\r\n\r\nbutton {\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\nform {\r\n  width: 100%;\r\n}\r\n\r\n.nweet-input::placeholder {\r\n  color: white;\r\n  opacity: 0.9;\r\n}\r\n\r\n.container {\r\n  width: 100%;\r\n  max-width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.formInput {\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  border: 1px solid black;\r\n  text-align: center;\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n.formBtn {\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 7px 20px;\r\n  text-align: center;\r\n  color: white;\r\n  border-radius: 20px;\r\n  background-color: #04aaff;\r\n  cursor: pointer;\r\n}\r\n\r\n.cancelBtn {\r\n  cursor: pointer;\r\n  background-color: tomato;\r\n}\r\n\r\n\r\n\r\n/* Nwitter Factory */\r\n\r\n.factoryForm {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.factoryInput__container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n}\r\n\r\n.factoryInput__input {\r\n  flex-grow: 1;\r\n  height: 40px;\r\n  padding: 0px 20px;\r\n  /* color: white; */\r\n  border: 1px solid #04aaff;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n}\r\n\r\n.factoryInput__arrow {\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #04aaff;\r\n  height: 40px;\r\n  width: 40px;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  border-radius: 20px;\r\n  color: white;\r\n}\r\n\r\n.factoryInput__label {\r\n  color: #04aaff;\r\n  cursor: pointer;\r\n}\r\n\r\n.factoryInput__label span {\r\n  margin-right: 10px;\r\n  font-size: 12px;\r\n}\r\n\r\n.factoryForm__attachment {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.factoryForm__attachment img {\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  margin-bottom:10px;\r\n}\r\n\r\n.factoryForm__clear {\r\n  color: #04aaff;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  margin-bottom:20px;\r\n}\r\n\r\n.factoryForm__clear span {\r\n  margin-right: 10px;\r\n  font-size: 12px;\r\n}\r\n\r\n/* Nweet */\r\n\r\n.nweetEdit .formBtn {\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n/* .nweet {\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  width: 100%;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.nweet h4 {\r\n  font-size: 14px;\r\n} */\r\n\r\n.tweetImg {\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 10px;\r\n}\r\n.profileImg {\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.nweet__actions {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 19px;\r\n}\r\n\r\n.nweet__actions span {\r\n  cursor: pointer;\r\n}\r\n\r\n.nweet__actions span:first-child {\r\n  margin-right: 10px;\r\n}\r\n\r\n\r\n\r\n/* AuthForm */\r\n\r\n.authInput {\r\n  max-width: 320px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 30px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n  margin-bottom: 10px;\r\n  font-size: 12px;\r\n  color: black;\r\n}\r\n\r\n.authSubmit {\r\n  text-align: center;\r\n  background: #04aaff;\r\n  color: white;\r\n  margin-top: 10;\r\n\r\nlhk3337 on 30 Sep\r\nmargin-top: 10px;\r\n\r\n  cursor: pointer;\r\n}\r\n\r\n.authError {\r\n  color: tomato;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n}\r\n\r\n.authSwitch {\r\n  color: #04aaff;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  margin-bottom: 50px;\r\n  display: block;\r\n  font-size: 12px;\r\n  text-decoration: underline;\r\n}\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { initializeApp } from 'firebase/app'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGEING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n}\r\n\r\ninitializeApp(firebaseConfig)\r\nexport const authService = getAuth()\r\nexport const dbService = getFirestore()\r\nexport const storageService = getStorage()\r\n","import React, { useState } from 'react'\r\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore'\r\nimport { deleteObject, ref } from 'firebase/storage'\r\nimport { dbService, storageService } from 'myBase'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components'\r\n\r\nconst ImgTweet = ({ userObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false)\r\n  const [newTweet, setNewTweet] = useState(userObj.text)\r\n  console.log(userObj)\r\n  const onDeleteClick = async () => {\r\n    if (window.confirm('삭제 하시겠습니까?')) {\r\n      await deleteDoc(doc(dbService, `tweets/${userObj.id}`))\r\n      await deleteObject(ref(storageService, userObj.fileURL))\r\n    }\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    await updateDoc(doc(dbService, `tweets/${userObj.id}`), {\r\n      text: newTweet,\r\n    })\r\n    setEditing(false)\r\n  }\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setNewTweet(value)\r\n  }\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev)\r\n\r\n  return (\r\n    <Nweet>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"문구 입력...\"\r\n              value={newTweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"완료\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            취소\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"profile\">\r\n            {userObj.profilePhoto ? (\r\n              <img src={userObj.profilePhoto} alt={userObj.nickName} />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faUserCircle} size=\"3x\" />\r\n            )}\r\n            <div className=\"text\">\r\n              <h4 style={{ fontSize: '15px', fontWeight: 'bold' }}>\r\n                {userObj.nickName}\r\n                <span style={{ color: 'gray', fontWeight: '300' }}>\r\n                  @{userObj.email}\r\n                </span>\r\n              </h4>\r\n              <h4 style={{ paddingTop: '10px' }}>{userObj.text}</h4>\r\n            </div>\r\n          </div>\r\n          {userObj.fileURL && (\r\n            <img\r\n              src={userObj.fileURL}\r\n              alt={userObj.fileURL}\r\n              className=\"tweetImg\"\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </Nweet>\r\n  )\r\n}\r\nconst Nweet = styled.div`\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  width: 100%;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  h4 {\r\n    font-size: 14px;\r\n    span {\r\n      margin-left: 5px;\r\n    }\r\n  }\r\n  .profile {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    img {\r\n      border-radius: 50%;\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n  }\r\n  .text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n`\r\nexport default ImgTweet\r\n","import { dbService, storageService } from 'myBase'\r\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage'\r\nimport { addDoc, collection } from 'firebase/firestore'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components'\r\n\r\nconst ImgTweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState('')\r\n  const [attachment, setAttachment] = useState('')\r\n\r\n  const onSubmit = async (event) => {\r\n    if (tweet === '') {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    let fileURL = ''\r\n    if (attachment !== '') {\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`)\r\n      const uploadFile = await uploadString(fileRef, attachment, 'data_url')\r\n      fileURL = await getDownloadURL(uploadFile.ref)\r\n    }\r\n    const tweetPost = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      nickName: userObj.displayName,\r\n      profilePhoto: userObj.photoURL,\r\n      email: userObj.email,\r\n      fileURL,\r\n    }\r\n    await addDoc(collection(dbService, 'tweets'), tweetPost)\r\n    setTweet('')\r\n    setAttachment('')\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setTweet(value)\r\n  }\r\n\r\n  const onFilechange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event\r\n    const theFile = files[0]\r\n    const reader = new FileReader()\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile)\r\n  }\r\n\r\n  const onClearAttachment = () => setAttachment('')\r\n  return (\r\n    <>\r\n      <FactoryForm onSubmit={onSubmit}>\r\n        <InputContainer>\r\n          <FactoryInput\r\n            value={tweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"무슨 일이 일어나고 있나요?\"\r\n            maxLength={120}\r\n          />\r\n          <FactoryArrow type=\"submit\" value=\"트윗\" />\r\n        </InputContainer>\r\n        <label\r\n          htmlFor=\"attach-file\"\r\n          style={{ color: '#04aaff', cursor: 'pointer' }}\r\n        >\r\n          <span style={{ marginRight: '10px', fontSize: '12px' }}>\r\n            Add photos\r\n          </span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFilechange}\r\n          id=\"attach-file\"\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              alt={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>취소</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </FactoryForm>\r\n    </>\r\n  )\r\n}\r\nconst FactoryForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n`\r\nconst FactoryInput = styled.input`\r\n  flex-grow: 1;\r\n  height: 40px;\r\n  padding: 0px 20px;\r\n  /* color: white; */\r\n  border: 1px solid #04aaff;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`\r\nconst FactoryArrow = styled.input`\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #04aaff;\r\n  height: 40px;\r\n  width: 40px;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  border-radius: 20px;\r\n  color: white;\r\n`\r\nexport default ImgTweetFactory\r\n","import { dbService } from 'myBase'\r\nimport { collection, query, orderBy, onSnapshot } from 'firebase/firestore'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ImgTweet from 'components/ImgTweet'\r\nimport ImgTweetFactory from 'components/ImgTweetFactory'\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([])\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(dbService, 'tweets'),\r\n      orderBy('createdAt', 'desc')\r\n    )\r\n    onSnapshot(q, (snapshot) => {\r\n      const tweetArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }))\r\n      setTweets(tweetArr)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ImgTweetFactory userObj={userObj} />\r\n      <div>\r\n        {tweets.map((tweet) => (\r\n          <ImgTweet\r\n            key={tweet.id}\r\n            userObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { authService } from 'myBase'\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth'\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [newAccount, setNewAccount] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event\r\n    if (name === 'email') {\r\n      setEmail(value)\r\n    } else if (name === 'password') {\r\n      setPassword(value)\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      if (newAccount) {\r\n        const data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        )\r\n        console.log('새계정', data)\r\n      } else {\r\n        const data = await signInWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        )\r\n        console.log('헌계정', data)\r\n      }\r\n    } catch (err) {\r\n      setError(err.message)\r\n    }\r\n  }\r\n  const toggleAccount = () => setNewAccount((prev) => !prev)\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? 'Create Account' : 'Sign In'}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm\r\n","import { authService } from 'myBase'\r\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth'\r\nimport React from 'react'\r\nimport AuthForm from 'components/AuthForm'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter, faGoogle } from '@fortawesome/free-brands-svg-icons'\r\nimport styled from 'styled-components'\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event\r\n    const provider = new GoogleAuthProvider()\r\n    if (name === 'google') {\r\n    }\r\n    await signInWithPopup(authService, provider)\r\n  }\r\n\r\n  return (\r\n    <AuthContainer>\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <AuthBtns>\r\n        <AuthBtn name=\"google\" onClick={onSocialClick}>\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </AuthBtn>\r\n      </AuthBtns>\r\n    </AuthContainer>\r\n  )\r\n}\r\nconst AuthContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 320px;\r\n`\r\n\r\nconst AuthBtns = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`\r\n\r\nconst AuthBtn = styled.button`\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  border: none;\r\n  padding: 10px 0px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  width: 100%;\r\n  background: white;\r\n  cursor: pointer;\r\n`\r\nexport default Auth\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { dbService } from 'myBase'\r\nimport { collection, getDocs, query, where, orderBy } from 'firebase/firestore'\r\nimport ImgTweet from 'components/ImgTweet'\r\n\r\nconst MyTweets = ({ userObj }) => {\r\n  const [myTweets, setMyTweets] = useState([])\r\n  const getMyTweets = useCallback(async () => {\r\n    const q = query(\r\n      collection(dbService, 'tweets'),\r\n      where('creatorId', '==', userObj.uid),\r\n      orderBy('createdAt', 'desc')\r\n    )\r\n\r\n    const querySnapshot = await getDocs(q)\r\n\r\n    const tweetArr = querySnapshot.docs.map((doc) => doc.data())\r\n    setMyTweets(tweetArr)\r\n  }, [userObj])\r\n\r\n  useEffect(() => {\r\n    getMyTweets()\r\n  }, [getMyTweets])\r\n\r\n  return (\r\n    <div>\r\n      {myTweets.map((myTweet, index) => (\r\n        <ImgTweet\r\n          key={index}\r\n          userObj={myTweet}\r\n          isOwner={myTweet.creatorId === userObj.uid}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTweets\r\n","import { authService } from 'myBase'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { updateProfile } from 'firebase/auth'\r\nimport React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faPlus,\r\n  faTimes,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components'\r\nimport MyTweets from './MyTweets'\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n  const [attachment, setAttachment] = useState('')\r\n  let navigate = useNavigate()\r\n  const onLogOutClick = () => {\r\n    authService.signOut()\r\n    navigate('/')\r\n  }\r\n  console.log(userObj)\r\n  console.log(attachment)\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setNewDisplayName(value)\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const user = authService.currentUser\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(user, {\r\n        displayName: newDisplayName,\r\n      })\r\n    } else if (userObj.photoURL !== attachment) {\r\n      await updateProfile(user, {\r\n        photoURL: attachment,\r\n      })\r\n    }\r\n\r\n    refreshUser()\r\n  }\r\n  const onFilechange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event\r\n    const theFile = files[0]\r\n    const reader = new FileReader()\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile)\r\n  }\r\n  const onClearAttachment = () => setAttachment('')\r\n  return (\r\n    <div className=\"container\">\r\n      <ProfileForm onSubmit={onSubmit}>\r\n        {attachment ? (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              alt={userObj.displayName}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>취소</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <ProfileImg>\r\n            {userObj.photoURL ? (\r\n              <img\r\n                src={userObj.photoURL}\r\n                alt={userObj.displayName}\r\n                className=\"profileImg\"\r\n              />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faUserCircle} size=\"3x\" />\r\n            )}\r\n            <p>{userObj.displayName}</p>\r\n          </ProfileImg>\r\n        )}\r\n        {/* <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label> */}\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFilechange}\r\n          id=\"attach-file\"\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"수정\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n        <span\r\n          className=\"formBtn cancelBtn\"\r\n          onClick={onLogOutClick}\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        >\r\n          로그아웃\r\n        </span>\r\n      </ProfileForm>\r\n      <MyTweets userObj={userObj} />\r\n    </div>\r\n  )\r\n}\r\nconst ProfileForm = styled.form`\r\n  padding-bottom: 30px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst ProfileImg = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  p {\r\n    margin-top: 10px;\r\n  }\r\n`\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst NavBar = ({ userObj }) => {\r\n  return (\r\n    <nav className=\"container\">\r\n      <ul\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          marginTop: 50,\r\n          marginBottom: 20,\r\n          alignItems: 'center',\r\n          width: '54%',\r\n        }}\r\n      >\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\r\n            {/* <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : 'Profile'}\r\n            </span> */}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport Home from 'routes/Home'\r\nimport Auth from 'routes/Auth'\r\nimport Profile from 'routes/Profile'\r\nimport NavBar from 'components/NavBar'\r\nimport MyTweets from 'routes/MyTweets'\r\nimport styled from 'styled-components'\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <StyledDiv>\r\n      <Router>\r\n        {isLoggedIn && <NavBar userObj={userObj} />}\r\n        <Routes>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <Route exact path=\"/\" element={<Home userObj={userObj} />} />\r\n              <Route\r\n                exact\r\n                path=\"/profile\"\r\n                element={\r\n                  <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                }\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/mytweets\"\r\n                element={<MyTweets userObj={userObj} />}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/\" element={<Auth />} />\r\n          )}\r\n        </Routes>\r\n      </Router>\r\n    </StyledDiv>\r\n  )\r\n}\r\nconst StyledDiv = styled.div`\r\n  max-width: 890;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 80;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\nexport default AppRouter\r\n","import React, { useEffect, useState } from 'react'\nimport GlobalStyle from 'styles/GlobalStyle'\nimport AppRouter from 'components/Router'\nimport { authService } from 'myBase'\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoURL: user.photoURL,\n          email: user.email.split('@')[0],\n          updateProfile: (args) => user.updateProfile(args),\n        })\n      } else {\n        setUserObj(null)\n      }\n      setInit(true)\n    })\n  }, [])\n  const refreshUser = () => {\n    const user = authService.currentUser\n\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      email: user.email.split('@')[0],\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return (\n    <>\n      <GlobalStyle />\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing,,,'\n      )}\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}