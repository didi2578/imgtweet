{"version":3,"sources":["styles/GlobalStyle.js","myBase.js","components/ImgTweet.js","components/ImgTweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/MyTweets.js","routes/Profile.js","components/NavBar.js","components/Router.js","components/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","reset","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","Nweet","styled","div","ImgTweet","userObj","isOwner","useState","editing","setEditing","text","newTweet","setNewTweet","console","log","onDeleteClick","a","window","confirm","deleteDoc","doc","id","deleteObject","ref","fileURL","onSubmit","event","preventDefault","updateDoc","toggleEditing","prev","className","type","placeholder","value","required","autoFocus","onChange","target","onClick","profilePhoto","src","alt","nickName","icon","faUserCircle","size","style","fontSize","fontWeight","color","email","paddingTop","faTrash","faPencilAlt","FactoryForm","form","InputContainer","FactoryInput","textarea","FactoryTweet","ImgTweetFactory","tweet","setTweet","attachment","setAttachment","navigate","useNavigate","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","tweetPost","createdAt","Date","now","creatorId","displayName","photoURL","addDoc","collection","to","padding","cursor","faArrowLeft","maxLength","htmlFor","faImage","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Button","button","Home","tweets","setTweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","snapshot","tweetArr","docs","map","data","onAuthStateChanged","user","position","AuthForm","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","AuthContainer","AuthBtns","AuthBtn","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","faTwitter","marginBottom","faGoogle","MyTweets","myTweets","setMyTweets","getMyTweets","useCallback","where","getDocs","querySnapshot","myTweet","index","ProfileForm","ProfileImg","Profile","refreshUser","newDisplayName","setNewDisplayName","currentUser","updateProfile","marginTop","signOut","Imgli","li","NavBar","location","useLocation","pathname","backgroundColor","display","justifyContent","alignItems","height","width","marginLeft","flexDirection","faHome","StyledDiv","AppRouter","isLoggedIn","path","element","App","init","setInit","setUserObj","split","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2fe5562.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\nimport reset from 'styled-reset'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n${reset}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\ninput {\r\n  all: unset;\r\n  box-sizing: border-box;\r\n  appearance: none;\r\n}\r\n\r\nbody {\r\n   //background-color: black; \r\n  \r\n  font-size: 14px;\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  // color: white; \r\n}\r\n\r\nbutton {\r\n  border:none;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\nform {\r\n  width: 100%;\r\n}\r\n\r\n.nweet-input::placeholder {\r\n  color: white;\r\n  opacity: 0.9;\r\n}\r\n\r\n.container {\r\n  width: 100%;\r\n  max-width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.formInput {\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  border: 1px solid black;\r\n  text-align: center;\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n.formBtn {\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 7px 20px;\r\n  text-align: center;\r\n  color: white;\r\n  border-radius: 20px;\r\n  background-color: orange;\r\n  cursor: pointer;\r\n}\r\n\r\n.cancelBtn {\r\n  cursor: pointer;\r\n  background-color: tomato;\r\n}\r\n\r\n\r\n\r\n/* Nwitter Factory */\r\n\r\n.factoryForm {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.factoryInput__container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n}\r\n\r\n.factoryInput__input {\r\n  flex-grow: 1;\r\n  height: 40px;\r\n  padding: 0px 20px;\r\n  /* color: white; */\r\n  border: 1px solid #04aaff;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n}\r\n\r\n.factoryInput__arrow {\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #04aaff;\r\n  height: 40px;\r\n  width: 40px;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  border-radius: 20px;\r\n  color: white;\r\n}\r\n\r\n.factoryInput__label {\r\n  color: #04aaff;\r\n  cursor: pointer;\r\n}\r\n\r\n.factoryInput__label span {\r\n  margin-right: 10px;\r\n  font-size: 12px;\r\n}\r\n\r\n.factoryForm__attachment {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: relative;\r\n}\r\n\r\n.factoryForm__attachment img {\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  margin-bottom:10px;\r\n}\r\n\r\n.factoryForm__clear {\r\n  color: orange;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  margin-bottom:20px;\r\n  position: absolute;\r\n    top: -15px;\r\n    right: 0;\r\n}\r\n\r\n.factoryForm__clear span {\r\n  margin-right: 10px;\r\n  font-size: 12px;\r\n}\r\n\r\n/* Nweet */\r\n\r\n.nweetEdit .formBtn {\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n/* .nweet {\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  width: 100%;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.nweet h4 {\r\n  font-size: 14px;\r\n} */\r\n\r\n.tweetImg {\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 10px;\r\n}\r\n.profileImg {\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.nweet__actions {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 19px;\r\n}\r\n\r\n.nweet__actions span {\r\n  cursor: pointer;\r\n}\r\n\r\n.nweet__actions span:first-child {\r\n  margin-right: 10px;\r\n}\r\n\r\n\r\n\r\n/* AuthForm */\r\n\r\n.authInput {\r\n  max-width: 320px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 30px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n  margin-bottom: 10px;\r\n  font-size: 12px;\r\n  color: black;\r\n}\r\n\r\n.authSubmit {\r\n  text-align: center;\r\n  background: #04aaff;\r\n  color: white;\r\n  margin-top: 10;\r\n\r\nlhk3337 on 30 Sep\r\nmargin-top: 10px;\r\n\r\n  cursor: pointer;\r\n}\r\n\r\n.authError {\r\n  color: tomato;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n}\r\n\r\n.authSwitch {\r\n  color: #04aaff;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  margin-bottom: 50px;\r\n  display: block;\r\n  font-size: 12px;\r\n  text-decoration: underline;\r\n}\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { initializeApp } from 'firebase/app'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGEING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n}\r\n\r\ninitializeApp(firebaseConfig)\r\nexport const authService = getAuth()\r\nexport const dbService = getFirestore()\r\nexport const storageService = getStorage()\r\n","import React, { useState } from 'react'\r\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore'\r\nimport { deleteObject, ref } from 'firebase/storage'\r\nimport { dbService, storageService } from 'myBase'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components'\r\n\r\nconst ImgTweet = ({ userObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false)\r\n  const [newTweet, setNewTweet] = useState(userObj.text)\r\n  console.log(userObj)\r\n  const onDeleteClick = async () => {\r\n    if (window.confirm('삭제 하시겠습니까?')) {\r\n      await deleteDoc(doc(dbService, `tweets/${userObj.id}`))\r\n      await deleteObject(ref(storageService, userObj.fileURL))\r\n    }\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    await updateDoc(doc(dbService, `tweets/${userObj.id}`), {\r\n      text: newTweet,\r\n    })\r\n    setEditing(false)\r\n  }\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setNewTweet(value)\r\n  }\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev)\r\n\r\n  return (\r\n    <Nweet>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"문구 입력...\"\r\n              value={newTweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"완료\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            취소\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"profile\">\r\n            {userObj.profilePhoto ? (\r\n              <img src={userObj.profilePhoto} alt={userObj.nickName} />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faUserCircle} size=\"3x\" />\r\n            )}\r\n            <div className=\"text\">\r\n              <h4 style={{ fontSize: '15px', fontWeight: 'bold' }}>\r\n                {userObj.nickName}\r\n                <span style={{ color: 'gray', fontWeight: '300' }}>\r\n                  @{userObj.email}\r\n                </span>\r\n              </h4>\r\n              <h4 style={{ paddingTop: '10px' }}>{userObj.text}</h4>\r\n            </div>\r\n          </div>\r\n          {userObj.fileURL && (\r\n            <img\r\n              src={userObj.fileURL}\r\n              alt={userObj.fileURL}\r\n              className=\"tweetImg\"\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </Nweet>\r\n  )\r\n}\r\nconst Nweet = styled.div`\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  width: 100%;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  h4 {\r\n    font-size: 14px;\r\n    span {\r\n      margin-left: 5px;\r\n    }\r\n  }\r\n  .profile {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    img {\r\n      border-radius: 50%;\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n  }\r\n  .text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n`\r\nexport default ImgTweet\r\n","import { dbService, storageService } from 'myBase'\r\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage'\r\nimport { addDoc, collection } from 'firebase/firestore'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTimes,\r\n  faUserCircle,\r\n  faArrowLeft,\r\n  faImage,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components'\r\n\r\nconst ImgTweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState('')\r\n  const [attachment, setAttachment] = useState('')\r\n  let navigate = useNavigate()\r\n\r\n  const onSubmit = async (event) => {\r\n    if (tweet === '') {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    let fileURL = ''\r\n    if (attachment !== '') {\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`)\r\n      const uploadFile = await uploadString(fileRef, attachment, 'data_url')\r\n      fileURL = await getDownloadURL(uploadFile.ref)\r\n    }\r\n    const tweetPost = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      nickName: userObj.displayName,\r\n      profilePhoto: userObj.photoURL,\r\n      email: userObj.email,\r\n      fileURL,\r\n    }\r\n    await addDoc(collection(dbService, 'tweets'), tweetPost)\r\n    setTweet('')\r\n    setAttachment('')\r\n    navigate('/')\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setTweet(value)\r\n  }\r\n\r\n  const onFilechange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event\r\n    const theFile = files[0]\r\n    const reader = new FileReader()\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile)\r\n  }\r\n\r\n  const onClearAttachment = () => setAttachment('')\r\n\r\n  return (\r\n    <>\r\n      <FactoryForm onSubmit={onSubmit}>\r\n        <Link to=\"/\">\r\n          <span style={{ padding: 10, cursor: 'pointer' }}>\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n          </span>\r\n        </Link>\r\n\r\n        <InputContainer>\r\n          {userObj.photoURL ? (\r\n            <img src={userObj.photoURL} alt={userObj.nickName} />\r\n          ) : (\r\n            <FontAwesomeIcon icon={faUserCircle} size=\"3x\" />\r\n          )}\r\n          <FactoryInput\r\n            value={tweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"무슨 일이 일어나고 있나요?\"\r\n            maxLength={120}\r\n          />\r\n        </InputContainer>\r\n        <FactoryTweet>\r\n          <label\r\n            htmlFor=\"attach-file\"\r\n            style={{ color: 'orange', cursor: 'pointer' }}\r\n          >\r\n            <FontAwesomeIcon icon={faImage} size=\"2x\" />\r\n          </label>\r\n          <input type=\"submit\" value=\"발행\" />\r\n        </FactoryTweet>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFilechange}\r\n          id=\"attach-file\"\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              alt={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <FontAwesomeIcon icon={faTimes} size=\"2x\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </FactoryForm>\r\n    </>\r\n  )\r\n}\r\nconst FactoryForm = styled.form`\r\n  padding: 10px;\r\n  max-width: 320px;\r\n`\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  align-items: top;\r\n  margin: 20px 5px;\r\n  width: 100%;\r\n  img {\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n    margin-right: 10px;\r\n  }\r\n`\r\nconst FactoryInput = styled.textarea`\r\n  flex-grow: 1;\r\n  height: 100px;\r\n  border: none;\r\n  padding: 10px 0;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  overflow-y: hidden;\r\n  resize: none;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`\r\nconst FactoryTweet = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  input {\r\n    background-color: orange;\r\n    height: 35px;\r\n    width: 60px;\r\n    padding: 10px 0px;\r\n    text-align: center;\r\n    border-radius: 20px;\r\n    color: white;\r\n  }\r\n`\r\nexport default ImgTweetFactory\r\n","import { dbService, authService } from 'myBase'\r\nimport { Link } from 'react-router-dom'\r\nimport { collection, query, orderBy, onSnapshot } from 'firebase/firestore'\r\nimport { onAuthStateChanged } from 'firebase/auth'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ImgTweet from 'components/ImgTweet'\r\nimport ImgTweetFactory from 'components/ImgTweetFactory'\r\nimport styled from 'styled-components'\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([])\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(dbService, 'tweets'),\r\n      orderBy('createdAt', 'desc')\r\n    )\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      const tweetArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }))\r\n      setTweets(tweetArr)\r\n    })\r\n\r\n    onAuthStateChanged(authService, (user) => {\r\n      if (user == null) {\r\n        unsubscribe()\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <ImgTweetFactory userObj={userObj} /> */}\r\n      <div style={{ position: 'relative' }}>\r\n        {tweets.map((tweet) => (\r\n          <ImgTweet\r\n            key={tweet.id}\r\n            userObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n        <Button>\r\n          <Link to=\"/tweetfactory\">+</Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst Button = styled.button`\r\n  font-size: 25px;\r\n  width: 45px;\r\n  height: 45px;\r\n  border-radius: 50%;\r\n  background-color: orange;\r\n  border: none;\r\n  color: white;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n`\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { authService } from 'myBase'\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth'\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [newAccount, setNewAccount] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event\r\n    if (name === 'email') {\r\n      setEmail(value)\r\n    } else if (name === 'password') {\r\n      setPassword(value)\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      if (newAccount) {\r\n        const data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        )\r\n        console.log('새계정', data)\r\n      } else {\r\n        const data = await signInWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        )\r\n        console.log('헌계정', data)\r\n      }\r\n    } catch (err) {\r\n      setError(err.message)\r\n    }\r\n  }\r\n  const toggleAccount = () => setNewAccount((prev) => !prev)\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? 'Create Account' : 'Sign In'}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm\r\n","import { authService } from 'myBase'\r\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth'\r\nimport React from 'react'\r\nimport AuthForm from 'components/AuthForm'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter, faGoogle } from '@fortawesome/free-brands-svg-icons'\r\nimport styled from 'styled-components'\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event\r\n    const provider = new GoogleAuthProvider()\r\n    if (name === 'google') {\r\n    }\r\n    await signInWithPopup(authService, provider)\r\n  }\r\n\r\n  return (\r\n    <AuthContainer>\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <AuthBtns>\r\n        <AuthBtn name=\"google\" onClick={onSocialClick}>\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </AuthBtn>\r\n      </AuthBtns>\r\n    </AuthContainer>\r\n  )\r\n}\r\nconst AuthContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 320px;\r\n`\r\n\r\nconst AuthBtns = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`\r\n\r\nconst AuthBtn = styled.button`\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  border: none;\r\n  padding: 10px 0px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  width: 100%;\r\n  background: white;\r\n  cursor: pointer;\r\n`\r\nexport default Auth\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { dbService } from 'myBase'\r\nimport { collection, getDocs, query, where, orderBy } from 'firebase/firestore'\r\nimport ImgTweet from 'components/ImgTweet'\r\n\r\nconst MyTweets = ({ userObj }) => {\r\n  const [myTweets, setMyTweets] = useState([])\r\n  const getMyTweets = useCallback(async () => {\r\n    const q = query(\r\n      collection(dbService, 'tweets'),\r\n      where('creatorId', '==', userObj.uid),\r\n      orderBy('createdAt', 'desc')\r\n    )\r\n\r\n    const querySnapshot = await getDocs(q)\r\n\r\n    const tweetArr = querySnapshot.docs.map((doc) => doc.data())\r\n    setMyTweets(tweetArr)\r\n  }, [userObj])\r\n\r\n  useEffect(() => {\r\n    getMyTweets()\r\n  }, [getMyTweets])\r\n\r\n  return (\r\n    <div>\r\n      {myTweets.map((myTweet, index) => (\r\n        <ImgTweet\r\n          key={index}\r\n          userObj={myTweet}\r\n          isOwner={myTweet.creatorId === userObj.uid}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTweets\r\n","import { authService } from 'myBase'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { updateProfile } from 'firebase/auth'\r\nimport React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faPlus,\r\n  faTimes,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components'\r\nimport MyTweets from './MyTweets'\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n  const [attachment, setAttachment] = useState('')\r\n  let navigate = useNavigate()\r\n  const onLogOutClick = () => {\r\n    authService.signOut()\r\n    navigate('/')\r\n  }\r\n  console.log(userObj)\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setNewDisplayName(value)\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const user = authService.currentUser\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(user, {\r\n        displayName: newDisplayName,\r\n      })\r\n    } else if (userObj.photoURL !== attachment) {\r\n      await updateProfile(user, {\r\n        photoURL: attachment,\r\n      })\r\n    }\r\n\r\n    refreshUser()\r\n  }\r\n  const onFilechange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event\r\n    const theFile = files[0]\r\n    const reader = new FileReader()\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent\r\n      setAttachment(result)\r\n    }\r\n    reader.readAsDataURL(theFile)\r\n  }\r\n  const onClearAttachment = () => setAttachment('')\r\n  return (\r\n    <div className=\"container\">\r\n      <ProfileForm onSubmit={onSubmit}>\r\n        {attachment ? (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              alt={userObj.displayName}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>취소</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <ProfileImg>\r\n            {userObj.photoURL ? (\r\n              <img\r\n                src={userObj.photoURL}\r\n                alt={userObj.displayName}\r\n                className=\"profileImg\"\r\n              />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faUserCircle} size=\"3x\" />\r\n            )}\r\n            <p>{userObj.displayName}</p>\r\n            <span style={{ color: 'gray', fontWeight: '300', paddingTop: 5 }}>\r\n              @{userObj.email}\r\n            </span>\r\n          </ProfileImg>\r\n        )}\r\n        {/* <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label> */}\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFilechange}\r\n          id=\"attach-file\"\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"수정\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n        <span\r\n          className=\"formBtn cancelBtn\"\r\n          onClick={onLogOutClick}\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        >\r\n          로그아웃\r\n        </span>\r\n      </ProfileForm>\r\n      <MyTweets userObj={userObj} />\r\n    </div>\r\n  )\r\n}\r\nconst ProfileForm = styled.form`\r\n  padding: 20px;\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst ProfileImg = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: baseline;\r\n\r\n  p {\r\n    margin-top: 10px;\r\n  }\r\n`\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\r\nimport { faUserCircle, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components'\r\n\r\nconst NavBar = ({ userObj }) => {\r\n  const location = useLocation()\r\n  console.log(userObj)\r\n  if (location.pathname === '/tweetfactory') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <nav className=\"container\" style={{ backgroundColor: 'orange' }}>\r\n      <ul\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          backgroundColor: 'orange',\r\n          height: 60,\r\n          width: '50%',\r\n        }}\r\n      >\r\n        <Imgli>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {userObj.photoURL ? (\r\n              <img src={userObj.photoURL} alt={userObj.nickName} />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faUserCircle} size=\"3x\" />\r\n            )}\r\n            {/* <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : 'Profile'}\r\n            </span> */}\r\n          </Link>\r\n        </Imgli>\r\n        <li>\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon\r\n              icon={faHome}\r\n              size=\"2x\"\r\n              style={{ color: 'white' }}\r\n            />\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\nconst Imgli = styled.li`\r\n  /* display: flex;\r\n  align-items: top;\r\n  margin: 20px 5px;\r\n  width: 100%; */\r\n  img {\r\n    border-radius: 50%;\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-right: 10px;\r\n  }\r\n`\r\nexport default NavBar\r\n","import React from 'react'\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport Home from 'routes/Home'\r\nimport Auth from 'routes/Auth'\r\nimport Profile from 'routes/Profile'\r\nimport NavBar from 'components/NavBar'\r\nimport MyTweets from 'routes/MyTweets'\r\nimport ImgTweetFactory from 'components/ImgTweetFactory'\r\nimport styled from 'styled-components'\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <StyledDiv>\r\n      <Router>\r\n        {isLoggedIn && <NavBar userObj={userObj} />}\r\n\r\n        <Routes>\r\n          {isLoggedIn ? (\r\n            // <NavBar userObj={userObj} />\r\n            <>\r\n              <Route path=\"/\" element={<Home userObj={userObj} />} />\r\n              <Route\r\n                path=\"/profile\"\r\n                element={\r\n                  <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/mytweets\"\r\n                element={<MyTweets userObj={userObj} />}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Route path=\"/\" element={<Auth />} />\r\n          )}\r\n          <Route\r\n            path=\"/tweetfactory\"\r\n            element={<ImgTweetFactory userObj={userObj} />}\r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </StyledDiv>\r\n  )\r\n}\r\nconst StyledDiv = styled.div`\r\n  max-width: 890;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 80;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\nexport default AppRouter\r\n","import React, { useEffect, useState } from 'react'\r\nimport GlobalStyle from 'styles/GlobalStyle'\r\nimport AppRouter from 'components/Router'\r\nimport { authService } from 'myBase'\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false)\r\n  const [userObj, setUserObj] = useState(null)\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          photoURL: user.photoURL,\r\n          email: user.email.split('@')[0],\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        })\r\n      } else {\r\n        setUserObj(null)\r\n      }\r\n      setInit(true)\r\n    })\r\n  }, [])\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser\r\n\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      photoURL: user.photoURL,\r\n      email: user.email.split('@')[0],\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        'Initializing,,,'\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}